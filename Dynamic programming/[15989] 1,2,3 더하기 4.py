"""
1,2,3의 조합으로 주어진 수를 만들 수 있는 경우의 수를 구하는 문제다.

우선 가장 큰 아이디어는 이전에 구해놓은 경우의 수를 이용하는 것이다.

예를 들어, N이 3으로 나눠 떨어질 때는 N-3를 만드는 경우의 수와 N을 1과 2로 만드는 경우의 수를 더해주면 된다.

왜냐하면 우선 3을 이용하지 않는 경우도 존재하기 때문에 1,2로 N을 만드는 경우의 수를 더해주며, N-3을 만드는 조합에 3을 더해주면 N이 되기 때문에 N-3을 만드는 경우의 수를 더해준다.

더 구체적으로 4로 예시를 든다면,

4를 1과 2로 만드는 경우의 수는 (1,1,1,1), (1,1,2), (2,2)다.
그리고 4-3=1을 만드는 경우의 수는 (1)이다. 즉 여기에 3을 추가하면 (1,3)이 되는 것이다.

고로 4를 만드는 경우의 수는 3+1이 되어 4가 된다.

점화식은 다음과 같다

DP[i][j] = DP[i-1][j] + DP[i][j-i] (i<=j)

DP[i][j] = DP[i-1][j] (i>j)

"""

import sys

T = int(sys.stdin.readline())

dp =[[1]*(10001) for i in range(4)]

for i in range(2,4):
  for j in range(1,10001):
    
    if j<i:
      dp[i][j] = dp[i-1][j]
    else:
      dp[i][j] = dp[i-1][j]+dp[i][j-i]

for _ in range(T):
  n = int(sys.stdin.readline())
  sys.stdout.write(str(dp[3][n])+'\n')